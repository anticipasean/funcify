import "wrappable_conjunct_design_type.stg"


flattenable_conjunct_design_type(class_name,
                                 implemented_type,
                                 container_type,
                                 package=[],
                                 witness_type="WT",
                                 type_variables=[],
                                 next_type_variable="",
                                 next_type_variable_sequences=[]) ::= <<
package <package; separator=".">;

<ensemble_type_import(implemented_type.type_name, implemented_type.type_package)>
<null_check_import()>
<java_util_func_import()>
import funcify.function.Fn<length(type_variables)>;

public interface <ensemble_type_declaration(class_name, witness_type, type_variables)> extends <ensemble_type_declaration(implemented_type.type_name, witness_type, type_variables)> {

<type_variables,next_type_variable_sequences:{tv, ntvs | <conjunct_flat_map_method(container_type, type_variables, tv, next_type_variable, i, witness_type, ntvs)>};separator="\n\n">

}
>>

conjunct_flat_map_method(container_type, type_variables, current_type_variable, next_type_variable, numeric_suffix="", witness_type="WT", next_type_variable_sequence=[]) ::= <<

    \<<next_type_variable>\> <ensemble_type_declaration(container_type.type_name, witness_type, next_type_variable_sequence)> flatMap<numeric_suffix>(<conjunct_flat_map_method_function_parameter(container_type, witness_type, type_variables, next_type_variable_sequence)>);

>>

conjunct_flat_map_method_container_parameter(container_type, witness_type="WT", type_variables=[]) ::= <<
final <ensemble_type_declaration(container_type.type_name, witness_type, type_variables)> container
>>

conjunct_flat_map_method_function_parameter(container_type, witness_type="WT", type_variables=[], next_type_variable_sequence=[]) ::= <<
final Fn<length(type_variables)>\<<type_variables:{tv| ? super <tv>};separator=", ">, ? extends <ensemble_type_declaration(container_type.type_name, witness_type, next_type_variable_sequence)>\> flatMapper
>>
