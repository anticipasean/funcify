plugins {
    id 'java'
}

sourceSets {

}

task generateSources(dependsOn: tasks.getByPath(":funcify-gen:shadowJar")) {
    doLast {
        File funcifyGenJar = tasks.getByPath(":funcify-gen:shadowJar").outputs.getFiles().filter({ File f -> f.getName().endsWith(".jar") }).singleFile
        if (funcifyGenJar) {
            File funcifyCoreMainJavaSourceSetDir = sourceSets.main.java.srcDirs.stream().findFirst().orElseThrow({ ->
                new IllegalStateException("no destination directory found for main java source set")
            })
            javaexec {
                main = "-jar"
                args = [funcifyGenJar.getAbsolutePath(),
                        "-d", funcifyCoreMainJavaSourceSetDir.getAbsolutePath()]
                println getCommandLine()
            }
        }
    }
}


dependencies {


}